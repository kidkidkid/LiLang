let x, y, x int;
let mm = 10 * 100 + -1;

fn test() {

}

fn f_0_0(){

}

fn f_0_1 (int){

}

fn f_0_2()(int, int)
{

}

fn f_1_1(int) int{

}

fn f_1_2 (int) (int, int)
{

}

fn f_2_2 (int, int) (int, int) {

}

fn test_two(int, int x, int y) (int, float)
{
    let m, n = retTwo(); //function call
    let a, b = 10.0, 10; // variable declaration
    let s []*[]int; // array
    let ss = s[10];
    sss = 10; // not declared
    let xx = &a; // reference
    *xx = 10; // deference
    let ff = fn() (int, int) {
        return 10, 10;
    };
    let mm = fn(int x, int y) int  {
        return x * y;
    }(10, 10);

    // funtion call test
    let p, q = f_0_2();
    let p1, q1 = f_2_2(p, q);
    let p2, q2 = f_2_2(f_0_2());
    // let p3 = f_0_0(); // not allowed
    // f_0_0(f_0_0()); //not allowd
    let p3, q3 = f_1_1(f_1_1(f_1_1(1000.0))), 100 & 10 ^ 10 + 10;
    let p4, q4 = f_2_2(f_1_2(f_1_1(10)))

}

